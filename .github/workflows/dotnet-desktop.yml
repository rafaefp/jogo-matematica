name: Build .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [ Release ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        shell: pwsh
        run: |
          if (Test-Path "./jogo-matematica.sln") {
            Write-Host "Solução encontrada: jogo-matematica.sln"
            dotnet restore ./jogo-matematica.sln --nologo
          }
          else {
            Write-Host "Nenhuma solução .sln encontrada. Executando restore genérico (procura *.csproj automaticamente)."
            dotnet restore --nologo
          }

      - name: Build
        shell: pwsh
        run: |
          if (Test-Path "./jogo-matematica.sln") {
            Write-Host "Build da solução..."
            dotnet build ./jogo-matematica.sln -c "${{ matrix.configuration }}" --no-restore --nologo
          }
          else {
            Write-Host "Build do(s) projeto(s) detectado(s)..."
            dotnet build -c "${{ matrix.configuration }}" --no-restore --nologo
          }

      - name: Publish
        shell: pwsh
        run: |
          $output = "publish"
          New-Item -ItemType Directory -Path $output -Force | Out-Null

          if (Test-Path "./jogo-matematica.sln") {
            Write-Host "Publicando a solução..."
            # Para publicar self-contained em Windows x64, por exemplo:
            # dotnet publish ./jogo-matematica.sln -c "${{ matrix.configuration }}" -o $output -r win-x64 --self-contained false --no-build
            dotnet publish ./jogo-matematica.sln -c "${{ matrix.configuration }}" -o $output --no-build --nologo
          }
          else {
            Write-Host "Localizando um arquivo .csproj..."
            $project = Get-ChildItem -Path . -Recurse -Filter *.csproj | Select-Object -First 1
            if (-not $project) {
              Write-Error "Nenhum .csproj encontrado para publicar."
              exit 1
            }
            Write-Host "Publicando projeto: $($project.FullName)"
            dotnet publish $project.FullName -c "${{ matrix.configuration }}" -o $output --no-build --nologo
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.configuration }}
          path: publish
